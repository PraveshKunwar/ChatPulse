version: "3.8"

services:
  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    volumes: [redis_data:/data]
    command: redis-server --appendonly no --save "" --maxmemory 1gb --maxmemory-policy allkeys-lru
    restart: unless-stopped

  backend-1:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports: ["3001:3001"]
    depends_on: [redis]
    environment:
      - REDIS_URL=redis://redis:6379
      - INSTANCE_ID=1
      - MAX_CONNECTIONS=2500
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  backend-2:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports: ["3002:3001"]
    depends_on: [redis]
    environment:
      - REDIS_URL=redis://redis:6379
      - INSTANCE_ID=2
      - MAX_CONNECTIONS=2500
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  backend-3:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports: ["3003:3001"]
    depends_on: [redis]
    environment:
      - REDIS_URL=redis://redis:6379
      - INSTANCE_ID=3
      - MAX_CONNECTIONS=2500
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  nginx:
    image: nginx:alpine
    ports: ["80:80"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: [backend-1, backend-2, backend-3]
    restart: unless-stopped

  frontend:
    build:
      context: ./chat-dashboard
      dockerfile: Dockerfile
    ports: ["3000:3000"]
    depends_on: [nginx]
    environment:
      - REACT_APP_BACKEND_URL=http://localhost
    restart: unless-stopped

volumes:
  redis_data:
